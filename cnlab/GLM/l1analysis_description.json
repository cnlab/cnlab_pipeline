{
    "Descriptions": "a string or an array of strings to describe the model",

    "Template": "(absolute path) template JSON file path",

    "Environment": {
        "spm_path": "(absolute path) SPM installation path; not required when run in Singularity image",
        "fsl_path": "(absolute path) FSL installation path; not required when run in Singularity image",
        "data_path": "(absolute path) data folder",
        "output_path": "(absolute path) output folder",
        "working_path": "(absolute path) working folder",
        "job_path": "(relative path) subfolder under data folder to store all job, event, slurm and outlier files"
    },
    
    "Info": {
        "task": "task name",
        "model": "model name",
        "sub_container": "(relative path) a path containing subject folders, e.g., derivatives (mutually exclusive with sub)",
        "sub": "an array of strings indicating subjects (mutually exclusive with sub_container)",
        "run": "an array of integers / strings",
        "tr": "a float indicating TR",
        "exclude": {
            "sub": "an array of strings indicating excluded subjects",
            "run": "a dict where (key = subjects) and (value = an array indicating which run to exclude of that subject)"
        }
    },

    "IsotropicSmooth": {
        "fwhm": "* (a float) – Fwhm of smoothing kernel [mm]. Entering 0 means that no smoothing will be done."
    },
    
    "SpecifySPMModel": {
        "input_units": "* (‘secs’ or ‘scans’) – Units of event onsets and durations (secs or scans). Output units are always in secs",
        "high_pass_filter_cutoff": "* (a float) – High-pass filter cutoff in secs.",

        "functional_runs": "(relative path) functional scan path template with {sub}/{task}/{run} substitutions",        
        "event_files": "(relative path) event file path template with {sub}/{task}/{run} substitutions",
        
        "regressors": "(relative path) regressor file path template with {sub}/{task}/{run} substitutions; can be either TSV or TXT",
        "regressor_names": "an array of (nuisance) regressors to be included",
        
        "outlier_files": "(relative path) outlier indices file path template with {sub}/{task}/{run} substitutions (mutually exclusive with outlier)",
        "outlier": {
            "dummy_scan": "an integer indicating number of initial scans to mark as outlier",
            "regressor_names": "an array of regressors in the regressor file"
        },

        "event_options": {
            "map_event": "a dict where (key = new event name) and (value = an array indicating existing events to be mapped), for grouping multiple events into one", 
            "melt_event": "a dict where (key = existing event name) and (value = field name for event id), for generating individual events such as single-trial betas", 
            "include_event": "an array of events to be included (mutually exclusive with exclude_event)",
            "exclude_event": "an array of events to be excluded (mutually exclusive with include_event)"
        },

        "pmod": "a dict where (key = event name) and (value = pmod regressor name)",
        "pmod_options": "an array containing a series of operations to be executed for each pmod: fillna / rank / minmax_scale / zscore"
    },

    "Level1Design": {
        "bases": "* derivs – (2-element list) Model HRF Derivatives. No derivatives: [0,0], Time derivatives : [1,0], Time and Dispersion derivatives: [1,1]",
        "timing_units": "* (‘secs’ or ‘scans’) – Units for specification of onsets",
        "global_intensity_normalization": "* (‘none’ or ‘scaling’) – Global intensity normalization - scaling or none",
        "model_serial_correlations": "* (‘AR(1)’ or ‘FAST’ or ‘none’) – Model serial correlations AR(1), FAST or none. FAST is available in SPM12"
    },
    
    "EstimateModel": {
        "estimation_method": "* (a dictionary with keys which are ‘Classical’ or ‘Bayesian2’ or ‘Bayesian’ and with values which are any value) – Dictionary of either Classical: 1, Bayesian: 1, or Bayesian2: 1 (dict)",
        "write_residuals": "* (a boolean) – Write individual residual images"
    },

    "EstimateContrast": {
        "basic_contrasts": "a boolean indicating whether to include contrasts for all beta images",
        "contrasts": "* (a list of items which are a tuple of the form: (a string, ‘T’, a list of items which are a string, a list of items which are a float) or a tuple of the form: (a string, ‘T’, a list of items which are a string, a list of items which are a float, a list of items which are a float) or a tuple of the form: (a string, ‘F’, a list of items which are a tuple of the form: (a string, ‘T’, a list of items which are a string, a list of items which are a float) or a tuple of the form: (a string, ‘T’, a list of items which are a string, a list of items which are a float, a list of items which are a float)))"
    }
}